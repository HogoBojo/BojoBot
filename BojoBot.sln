using Discord;
using Discord.Commands;
using System;
using System.Linq;
using System.Threading.Tasks;

namespace BojoBot
{
    public class DiscordBot
    {
        DiscordClient client;
        CommandService commands;

        public DiscordBot()
        {

            client = new DiscordClient(input =>
            {
                input.LogLevel = LogSeverity.Info;
                input.LogHandler = Log;
            });

            client.UsingCommands(input =>
            {
                input.PrefixChar = '$';
                input.AllowMentionPrefix = true;
            });

            commands = client.GetService<CommandService>();

            commands.CreateCommand("InviteMe").Do(async (e) =>
            {
                await e.User.SendMessage("https://discordapp.com/oauth2/authorize?client_id=176502655915524098&scope=bot&permissions=0");
            });

            commands = client.GetService<CommandService>();

            commands.CreateCommand("Sucks").Do(async (e) =>
            {
                var userRoles = e.User.Roles;

                if (userRoles.Any(input => input.Name.ToUpper() == "Teil"))

                    await e.Channel.SendMessage("This Easter Egg Was Inspired By @Teilio#9107: http://media2.giphy.com/media/atbiDI1fXpYUU/giphy.gif");

                else await e.User.SendMessage("You do not have permission for this command");
            });

            commands = client.GetService<CommandService>();

            commands.CreateCommand("Help").Do(async (e) =>
            {
                await e.Channel.SendMessage("Current Commands: InviteMe");
            });

            #If you do $announce (Message) the bot will announce your message!
            commands.CreateCommand("announce").Parameter("message", ParameterType.Multiple).Do(async (e) =>
            {
                await DoAnnouncement(e);
            });

            client.UserJoined += async (s, e) =>
            {
                var channel = e.Server.FindChannels("general", ChannelType.Text).FirstOrDefault();

                var user = e.User;

                await channel.SendMessage(String.Format("{0} has joined the channel!", user.Name));
            };

            client.UserBanned += async (s, e) =>
            {
                var channel = e.Server.FindChannels("mod-log", ChannelType.Text).FirstOrDefault();

                var user = e.User;

                await channel.SendMessage(String.Format("{0} has been banned!", user.Name));
            };

            client.UserUnbanned += async (s, e) =>
            {
                var channel = e.Server.FindChannels("mod-log", ChannelType.Text).FirstOrDefault();

                var user = e.User;

                await channel.SendMessage(String.Format("{0} has been unbanned!", user.Name));
            };

            client.UserLeft += async (s, e) =>
            {
                var channel = e.Server.FindChannels("general", ChannelType.Text).FirstOrDefault();

                var user = e.User;

                await channel.SendMessage(String.Format("{0} has left!", user.Name));
            };

            client.ExecuteAndWait(async () =>
            {
                await client.Connect("Bot Token Here", TokenType.Bot);
            });
        }

        private async Task DoAnnouncement(CommandEventArgs e)
        {
            var channel = e.Server.FindChannels(e.Args[0], ChannelType.Text).FirstOrDefault();

            var message = ConStructMessage(e, channel != null); 
            
            if(channel != null)
            {
                await channel.SendMessage(message);
            }
            else
            {
                await e.Channel.SendMessage(message);
            }
        }

        private string ConStructMessage(CommandEventArgs e, bool firstArgIsChannel)
        {
            string message = "";

            var name = e.User.Nickname != null ? e.User.Nickname : e.User.Name;

            var StartIndex = firstArgIsChannel ? 1 : 0;

            for(int i = StartIndex; i < e.Args.Length; i++)
            {
                message += e.Args[i].ToString() + " ";
            }

            var result = name + " says: " + message;

            return result;
        }

        private void Log(object sender, LogMessageEventArgs e)
        {
            Console.WriteLine(e.Message);
        }
    }
}
